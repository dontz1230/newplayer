{"remainingRequest":"C:\\Users\\user\\Desktop\\player\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\user\\Desktop\\player\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\user\\Desktop\\player\\src\\components\\Store\\Modules\\admin.js","dependencies":[{"path":"C:\\Users\\user\\Desktop\\player\\src\\components\\Store\\Modules\\admin.js","mtime":1570503791424},{"path":"C:\\Users\\user\\Desktop\\player\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\user\\Desktop\\player\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\user\\Desktop\\player\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"C:\\\\Users\\\\user\\\\Desktop\\\\player\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/*eslint-disable*/\nimport Vue from 'vue';\nimport router from \"../../../routes\";\nvar FbAuth = \"https://www.googleapis.com/identitytoolkit/v3/relyingparty\";\nvar FbApiKey = \"AIzaSyD83foBNfz-_Oe4Ua4LFSR2cbWUJ7ZPnuc\";\nvar admin = {\n  namespaced: true,\n  state: {\n    token: null,\n    refresh: null,\n    authFailed: false,\n    addpost: false,\n    imgUpload: null\n  },\n  getters: {\n    isAuth: function isAuth(state) {\n      if (state.token) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    addPostStatus: function addPostStatus(state) {\n      return state.addpost;\n    },\n    imgUploadUrl: function imgUploadUrl(state) {\n      return state.imgUpload;\n    }\n  },\n  mutations: {\n    authUser: function authUser(state, authData) {\n      state.token = authData.idToken;\n      state.refresh = authData.refreshToken;\n\n      if (authData.type === 'signin') {\n        router.push('/dashboard');\n      }\n    },\n    authFailed: function authFailed(state, type) {\n      if (type === 'reset') {\n        state.authFailed = false;\n      } else {\n        state.authFailed = true;\n      }\n    },\n    logoutUser: function logoutUser(state) {\n      state.token = null;\n      state.refresh = null;\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"refresh\");\n      router.push('/');\n    },\n    changePostStatus: function changePostStatus(state) {\n      state.addpost = true;\n    },\n    clearPostStatus: function clearPostStatus(state) {\n      state.addpost = false;\n    },\n    imgUpload: function imgUpload(state, imgData) {\n      state.imgUpload = imgData.secure_url;\n    },\n    clearImgUpload: function clearImgUpload(state) {\n      state.imgUpload = null;\n    }\n  },\n  actions: {\n    signIn: function signIn(_ref, payload) {\n      var commit = _ref.commit;\n      Vue.http.post(\"\".concat(FbAuth, \"/verifyPassword?key=\").concat(FbApiKey), _objectSpread({}, payload, {\n        returnSecureToken: true\n      })).then(function (res) {\n        return res.json();\n      }).then(function (authData) {\n        commit('authUser', _objectSpread({}, authData, {\n          type: 'signin'\n        }));\n        localStorage.setItem(\"token\", authData.idToken);\n        localStorage.setItem(\"refresh\", authData.refreshToken);\n      }).catch(function (error) {\n        commit(\"authFailed\");\n      });\n    },\n    refreshToken: function refreshToken(_ref2) {\n      var commit = _ref2.commit;\n      var refreshToken = localStorage.getItem(\"refresh\");\n\n      if (refreshToken) {\n        Vue.http.post(\"https://securetoken.googleapis.com/v1/token?key=\".concat(FbApiKey), {\n          grant_type: 'refresh_token',\n          refresh_token: refreshToken\n        }).then(function (res) {\n          return res.json();\n        }).then(function (authData) {\n          commit(\"authUser\", {\n            idToken: authData.id_token,\n            refreshToken: authData.refresh_token,\n            type: 'refresh'\n          });\n          localStorage.setItem(\"token\", authData.id_token);\n          localStorage.setItem(\"refresh\", authData.refresh_token);\n        });\n      } else {\n        console.log('cannot fresh token');\n      }\n    },\n    addPost: function addPost(_ref3, payload) {\n      var commit = _ref3.commit,\n          state = _ref3.state;\n      Vue.http.post(\"posts.json?auth=\".concat(state.token), payload).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        //激發addpost屬性從false改成true\n        commit(\"changePostStatus\");\n        setTimeout(function () {\n          commit(\"clearPostStatus\");\n        }, 3000);\n      });\n    },\n    imgUpload: function imgUpload(_ref4, file) {\n      var commit = _ref4.commit;\n      var CLOUDINARY_URL = 'https://api.cloudinary.com/v1_1/dontz3210/image/upload';\n      var CLOUDINARY_PRESET = 's84oweuo';\n      var formData = new FormData();\n      formData.append('file', file);\n      formData.append('upload_preset', CLOUDINARY_PRESET);\n      Vue.http.post(CLOUDINARY_URL, formData, {\n        headers: {\n          'Content-type': 'application/x-www-form-urlencoded'\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        return commit(\"imgUpload\", res);\n      });\n    }\n  }\n};\nexport default admin;",{"version":3,"sources":["C:\\Users\\user\\Desktop\\player\\src\\components\\Store\\Modules\\admin.js"],"names":["Vue","router","FbAuth","FbApiKey","admin","namespaced","state","token","refresh","authFailed","addpost","imgUpload","getters","isAuth","addPostStatus","imgUploadUrl","mutations","authUser","authData","idToken","refreshToken","type","push","logoutUser","localStorage","removeItem","changePostStatus","clearPostStatus","imgData","secure_url","clearImgUpload","actions","signIn","payload","commit","http","post","returnSecureToken","then","res","json","setItem","catch","error","getItem","grant_type","refresh_token","id_token","console","log","addPost","setTimeout","file","CLOUDINARY_URL","CLOUDINARY_PRESET","formData","FormData","append","headers"],"mappings":"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","sourcesContent":["/*eslint-disable*/\r\nimport Vue from 'vue';\r\nimport router from '../../../routes';\r\n\r\nconst FbAuth = \"https://www.googleapis.com/identitytoolkit/v3/relyingparty\";\r\nconst FbApiKey = \"AIzaSyD83foBNfz-_Oe4Ua4LFSR2cbWUJ7ZPnuc\";\r\n\r\nconst admin = {\r\n    namespaced: true,\r\n    state:{\r\n        token:null,\r\n        refresh:null,\r\n        authFailed: false,\r\n        addpost: false,\r\n        imgUpload: null\r\n    },\r\n    getters:{\r\n        isAuth(state){\r\n            if(state.token) {\r\n                return true\r\n            } else {\r\n                return false\r\n            }\r\n        },\r\n        addPostStatus(state){\r\n            return state.addpost\r\n        },\r\n        imgUploadUrl(state){\r\n            return state.imgUpload\r\n        }\r\n\r\n    },\r\n    mutations:{\r\n        authUser(state, authData){\r\n            state.token = authData.idToken\r\n            state.refresh = authData.refreshToken\r\n\r\n            if(authData.type === 'signin'){\r\n                router.push('/dashboard');\r\n            }\r\n        },\r\n        authFailed(state, type){\r\n            if(type === 'reset'){\r\n                state.authFailed = false\r\n            } else {\r\n                state.authFailed = true\r\n            }\r\n        },\r\n        logoutUser(state){\r\n            state.token = null;\r\n            state.refresh = null;\r\n            localStorage.removeItem(\"token\");\r\n            localStorage.removeItem(\"refresh\");\r\n            router.push('/');\r\n        },\r\n        changePostStatus(state){\r\n            state.addpost = true\r\n        },\r\n        clearPostStatus(state){\r\n            state.addpost = false\r\n        },\r\n        imgUpload(state, imgData){\r\n            state.imgUpload = imgData.secure_url\r\n        },\r\n        clearImgUpload(state){\r\n            state.imgUpload = null\r\n        }\r\n    },\r\n    actions:{\r\n        signIn({commit},payload){\r\n            Vue.http.post(`${FbAuth}/verifyPassword?key=${FbApiKey}`,\r\n            { ...payload,returnSecureToken: true })\r\n            .then( res => res.json())\r\n            .then( authData => \r\n                {\r\n                    commit('authUser',{\r\n                        ...authData,\r\n                        type:'signin'\r\n                    });\r\n                    localStorage.setItem(\"token\",authData.idToken)\r\n                    localStorage.setItem(\"refresh\",authData.refreshToken)\r\n                })\r\n            .catch( error => {\r\n                commit(\"authFailed\")\r\n            })     \r\n        },\r\n        refreshToken({commit}){\r\n            const refreshToken = localStorage.getItem(\"refresh\");\r\n\r\n            if(refreshToken){\r\n                Vue.http.post(`https://securetoken.googleapis.com/v1/token?key=${FbApiKey}`,{\r\n                    grant_type: 'refresh_token',\r\n                    refresh_token: refreshToken\r\n                })\r\n                .then( res => res.json())\r\n                .then( authData => {\r\n                    commit(\"authUser\",{\r\n                        idToken: authData.id_token,\r\n                        refreshToken: authData.refresh_token,\r\n                        type:'refresh'\r\n                    });\r\n                    localStorage.setItem(\"token\",authData.id_token)\r\n                    localStorage.setItem(\"refresh\",authData.refresh_token)\r\n                }) \r\n            } else {\r\n                console.log('cannot fresh token')\r\n            }\r\n        },\r\n        addPost({ commit, state },payload){\r\n            Vue.http.post(`posts.json?auth=${state.token}`,payload)\r\n            .then( res => res.json() )\r\n            .then( res => {\r\n                //激發addpost屬性從false改成true\r\n                commit(\"changePostStatus\")\r\n                setTimeout(()=>{\r\n                    commit(\"clearPostStatus\")\r\n                },3000)\r\n            })\r\n        },\r\n        imgUpload({commit},file){\r\n            const CLOUDINARY_URL = 'https://api.cloudinary.com/v1_1/dontz3210/image/upload'\r\n            const CLOUDINARY_PRESET = 's84oweuo'\r\n\r\n            let formData = new FormData();\r\n            formData.append('file', file);\r\n            formData.append('upload_preset', CLOUDINARY_PRESET)\r\n            \r\n            Vue.http.post(CLOUDINARY_URL,formData,{\r\n                headers:{\r\n                    'Content-type': 'application/x-www-form-urlencoded'\r\n                }\r\n            })\r\n            .then( res => res.json())\r\n            .then( res => \r\n                    commit(\"imgUpload\", res)\r\n                )\r\n        }\r\n    }\r\n}\r\n\r\nexport default admin;\r\n"]}]}