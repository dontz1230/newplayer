{"remainingRequest":"C:\\Users\\user\\Desktop\\player\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\user\\Desktop\\player\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\user\\Desktop\\player\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\user\\Desktop\\player\\src\\components\\Store\\Modules\\admin.js","dependencies":[{"path":"C:\\Users\\user\\Desktop\\player\\src\\components\\Store\\Modules\\admin.js","mtime":1570516200737},{"path":"C:\\Users\\user\\Desktop\\player\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\user\\Desktop\\player\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\user\\Desktop\\player\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\user\\Desktop\\player\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"C:\\\\Users\\\\user\\\\Desktop\\\\player\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/*eslint-disable*/\nimport Vue from 'vue';\nimport router from \"../../../routes\";\nvar FbAuth = \"https://www.googleapis.com/identitytoolkit/v3/relyingparty\";\nvar FbApiKey = \"AIzaSyD83foBNfz-_Oe4Ua4LFSR2cbWUJ7ZPnuc\";\nvar admin = {\n  namespaced: true,\n  state: {\n    token: null,\n    refresh: null,\n    authFailed: false,\n    addpost: false,\n    imgUpload: null,\n    adminPosts: null\n  },\n  getters: {\n    isAuth: function isAuth(state) {\n      if (state.token) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    addPostStatus: function addPostStatus(state) {\n      return state.addpost;\n    },\n    imgUploadUrl: function imgUploadUrl(state) {\n      return state.imgUpload;\n    },\n    getAdminPostsGetters: function getAdminPostsGetters(state) {\n      return state.adminPosts;\n    }\n  },\n  mutations: {\n    authUser: function authUser(state, authData) {\n      state.token = authData.idToken;\n      state.refresh = authData.refreshToken;\n\n      if (authData.type === 'signin') {\n        router.push('/dashboard');\n      }\n    },\n    authFailed: function authFailed(state, type) {\n      if (type === 'reset') {\n        state.authFailed = false;\n      } else {\n        state.authFailed = true;\n      }\n    },\n    logoutUser: function logoutUser(state) {\n      state.token = null;\n      state.refresh = null;\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"refresh\");\n      router.push('/');\n    },\n    changePostStatus: function changePostStatus(state) {\n      state.addpost = true;\n    },\n    clearPostStatus: function clearPostStatus(state) {\n      state.addpost = false;\n    },\n    imgUpload: function imgUpload(state, imgData) {\n      state.imgUpload = imgData.secure_url;\n    },\n    clearImgUpload: function clearImgUpload(state) {\n      state.imgUpload = null;\n    },\n    getAdminPosts: function getAdminPosts(state, posts) {\n      state.adminPosts = posts;\n    }\n  },\n  actions: {\n    signIn: function signIn(_ref, payload) {\n      var commit = _ref.commit;\n      Vue.http.post(\"\".concat(FbAuth, \"/verifyPassword?key=\").concat(FbApiKey), _objectSpread({}, payload, {\n        returnSecureToken: true\n      })).then(function (res) {\n        return res.json();\n      }).then(function (authData) {\n        commit('authUser', _objectSpread({}, authData, {\n          type: 'signin'\n        }));\n        localStorage.setItem(\"token\", authData.idToken);\n        localStorage.setItem(\"refresh\", authData.refreshToken);\n      }).catch(function (error) {\n        commit(\"authFailed\");\n      });\n    },\n    refreshToken: function refreshToken(_ref2) {\n      var commit = _ref2.commit;\n      var refreshToken = localStorage.getItem(\"refresh\");\n\n      if (refreshToken) {\n        Vue.http.post(\"https://securetoken.googleapis.com/v1/token?key=\".concat(FbApiKey), {\n          grant_type: 'refresh_token',\n          refresh_token: refreshToken\n        }).then(function (res) {\n          return res.json();\n        }).then(function (authData) {\n          commit(\"authUser\", {\n            idToken: authData.id_token,\n            refreshToken: authData.refresh_token,\n            type: 'refresh'\n          });\n          localStorage.setItem(\"token\", authData.id_token);\n          localStorage.setItem(\"refresh\", authData.refresh_token);\n        });\n      } else {\n        console.log('cannot fresh token');\n      }\n    },\n    addPost: function addPost(_ref3, payload) {\n      var commit = _ref3.commit,\n          state = _ref3.state;\n      Vue.http.post(\"posts.json?auth=\".concat(state.token), payload).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        //激發addpost屬性從false改成true\n        commit(\"changePostStatus\");\n        setTimeout(function () {\n          commit(\"clearPostStatus\");\n        }, 3000);\n      });\n    },\n    imgUpload: function imgUpload(_ref4, file) {\n      var commit = _ref4.commit;\n      var CLOUDINARY_URL = 'https://api.cloudinary.com/v1_1/dontz3210/image/upload';\n      var CLOUDINARY_PRESET = 's84oweuo';\n      var formData = new FormData();\n      formData.append('file', file);\n      formData.append('upload_preset', CLOUDINARY_PRESET);\n      Vue.http.post(CLOUDINARY_URL, formData, {\n        headers: {\n          'Content-type': 'application/x-www-form-urlencoded'\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        return commit(\"imgUpload\", res);\n      });\n    },\n    getAdminPosts: function getAdminPosts(_ref5) {\n      var commit = _ref5.commit;\n      Vue.http.get('posts.json').then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        var posts = [];\n\n        for (var key in res) {\n          posts.push(_objectSpread({}, res[key], {\n            id: key\n          }));\n        }\n\n        commit(\"getAdminPosts\", posts.reverse());\n      });\n    },\n    deletePost: function deletePost(_ref6, payload) {\n      var commit = _ref6.commit,\n          state = _ref6.state;\n      Vue.http.delete(\"posts/\".concat(payload, \".json?auth=\").concat(state.token)).then(function (res) {\n        var newPosts = [];\n        state.adminPosts.forEach(function (post) {\n          if (post.id != payload) {\n            newPosts.push(post);\n          }\n        });\n        commit(\"getAdminPosts\", newPosts);\n      });\n    }\n  }\n};\nexport default admin;",{"version":3,"sources":["C:\\Users\\user\\Desktop\\player\\src\\components\\Store\\Modules\\admin.js"],"names":["Vue","router","FbAuth","FbApiKey","admin","namespaced","state","token","refresh","authFailed","addpost","imgUpload","adminPosts","getters","isAuth","addPostStatus","imgUploadUrl","getAdminPostsGetters","mutations","authUser","authData","idToken","refreshToken","type","push","logoutUser","localStorage","removeItem","changePostStatus","clearPostStatus","imgData","secure_url","clearImgUpload","getAdminPosts","posts","actions","signIn","payload","commit","http","post","returnSecureToken","then","res","json","setItem","catch","error","getItem","grant_type","refresh_token","id_token","console","log","addPost","setTimeout","file","CLOUDINARY_URL","CLOUDINARY_PRESET","formData","FormData","append","headers","get","key","id","reverse","deletePost","delete","newPosts","forEach"],"mappings":"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","sourcesContent":["/*eslint-disable*/\r\nimport Vue from 'vue';\r\nimport router from '../../../routes';\r\n\r\nconst FbAuth = \"https://www.googleapis.com/identitytoolkit/v3/relyingparty\";\r\nconst FbApiKey = \"AIzaSyD83foBNfz-_Oe4Ua4LFSR2cbWUJ7ZPnuc\";\r\n\r\nconst admin = {\r\n    namespaced: true,\r\n    state:{\r\n        token:null,\r\n        refresh:null,\r\n        authFailed: false,\r\n        addpost: false,\r\n        imgUpload: null,\r\n        adminPosts: null\r\n    },\r\n    getters:{\r\n        isAuth(state){\r\n            if(state.token) {\r\n                return true\r\n            } else {\r\n                return false\r\n            }\r\n        },\r\n        addPostStatus(state){\r\n            return state.addpost\r\n        },\r\n        imgUploadUrl(state){\r\n            return state.imgUpload\r\n        },\r\n        getAdminPostsGetters(state){\r\n            return state.adminPosts\r\n        }\r\n\r\n    },\r\n    mutations:{\r\n        authUser(state, authData){\r\n            state.token = authData.idToken\r\n            state.refresh = authData.refreshToken\r\n\r\n            if(authData.type === 'signin'){\r\n                router.push('/dashboard');\r\n            }\r\n        },\r\n        authFailed(state, type){\r\n            if(type === 'reset'){\r\n                state.authFailed = false\r\n            } else {\r\n                state.authFailed = true\r\n            }\r\n        },\r\n        logoutUser(state){\r\n            state.token = null;\r\n            state.refresh = null;\r\n            localStorage.removeItem(\"token\");\r\n            localStorage.removeItem(\"refresh\");\r\n            router.push('/');\r\n        },\r\n        changePostStatus(state){\r\n            state.addpost = true\r\n        },\r\n        clearPostStatus(state){\r\n            state.addpost = false\r\n        },\r\n        imgUpload(state, imgData){\r\n            state.imgUpload = imgData.secure_url\r\n        },\r\n        clearImgUpload(state){\r\n            state.imgUpload = null\r\n        },\r\n        getAdminPosts(state, posts){\r\n            state.adminPosts = posts\r\n        }\r\n    },\r\n    actions:{\r\n        signIn({commit},payload){\r\n            Vue.http.post(`${FbAuth}/verifyPassword?key=${FbApiKey}`,\r\n            { ...payload,returnSecureToken: true })\r\n            .then( res => res.json())\r\n            .then( authData => \r\n                {\r\n                    commit('authUser',{\r\n                        ...authData,\r\n                        type:'signin'\r\n                    });\r\n                    localStorage.setItem(\"token\",authData.idToken)\r\n                    localStorage.setItem(\"refresh\",authData.refreshToken)\r\n                })\r\n            .catch( error => {\r\n                commit(\"authFailed\")\r\n            })     \r\n        },\r\n        refreshToken({commit}){\r\n            const refreshToken = localStorage.getItem(\"refresh\");\r\n\r\n            if(refreshToken){\r\n                Vue.http.post(`https://securetoken.googleapis.com/v1/token?key=${FbApiKey}`,{\r\n                    grant_type: 'refresh_token',\r\n                    refresh_token: refreshToken\r\n                })\r\n                .then( res => res.json())\r\n                .then( authData => {\r\n                    commit(\"authUser\",{\r\n                        idToken: authData.id_token,\r\n                        refreshToken: authData.refresh_token,\r\n                        type:'refresh'\r\n                    });\r\n                    localStorage.setItem(\"token\",authData.id_token)\r\n                    localStorage.setItem(\"refresh\",authData.refresh_token)\r\n                }) \r\n            } else {\r\n                console.log('cannot fresh token')\r\n            }\r\n        },\r\n        addPost({ commit, state },payload){\r\n            Vue.http.post(`posts.json?auth=${state.token}`,payload)\r\n            .then( res => res.json() )\r\n            .then( res => {\r\n                //激發addpost屬性從false改成true\r\n                commit(\"changePostStatus\")\r\n                setTimeout(()=>{\r\n                    commit(\"clearPostStatus\")\r\n                },3000)\r\n            })\r\n        },\r\n        imgUpload({commit},file){\r\n            const CLOUDINARY_URL = 'https://api.cloudinary.com/v1_1/dontz3210/image/upload'\r\n            const CLOUDINARY_PRESET = 's84oweuo'\r\n\r\n            let formData = new FormData();\r\n            formData.append('file', file);\r\n            formData.append('upload_preset', CLOUDINARY_PRESET)\r\n            \r\n            Vue.http.post(CLOUDINARY_URL,formData,{\r\n                headers:{\r\n                    'Content-type': 'application/x-www-form-urlencoded'\r\n                }\r\n            })\r\n            .then( res => res.json())\r\n            .then( res => \r\n                    commit(\"imgUpload\", res)\r\n                )\r\n        },\r\n        getAdminPosts({commit}){\r\n            Vue.http.get('posts.json')\r\n            .then( res => res.json())\r\n            .then( res => {\r\n                const posts = [];\r\n                for(let key in res){\r\n                    posts.push({\r\n                        ...res[key],\r\n                        id:key \r\n                    })\r\n                }\r\n                commit(\"getAdminPosts\", posts.reverse())\r\n                \r\n            })\r\n        },\r\n        deletePost({commit,state},payload){\r\n            Vue.http.delete(`posts/${payload}.json?auth=${state.token}`)\r\n            .then( res => {\r\n                let newPosts = [];\r\n                state.adminPosts.forEach( post => {\r\n                    if(post.id != payload){\r\n                        newPosts.push(post)\r\n                    }\r\n                })\r\n                commit(\"getAdminPosts\", newPosts)\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default admin;\r\n"]}]}